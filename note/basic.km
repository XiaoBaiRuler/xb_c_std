{
    "root": {
        "data": {
            "id": "ciq1gey4kps0",
            "created": 1647915964376,
            "text": "C",
            "note": null,
            "progress": null
        },
        "children": [
            {
                "data": {
                    "id": "ciq6uyas7hs0",
                    "created": 1647931209148,
                    "text": "预处理器",
                    "priority": 1,
                    "note": "1. 定义明示常量\n#define A 100\n#undef A\n2. 包含其他文件\n#include \n3. 判断\n#ifdef\n#else\n#ifndef\n#endif\n#if\n#elif\n4. 重置宏报告的行号和文件名\n#line\n5. 编译过程终端\n#error\n6. 把编译器指令放入源代码中\n#pragma\n\n"
                },
                "children": [
                    {
                        "data": {
                            "id": "civb7f6bvjs0",
                            "created": 1648451270477,
                            "text": "预处理之前，编译器",
                            "font-weight": "bold",
                            "priority": 2
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "civb9miands0",
                            "created": 1648451443167,
                            "text": "##运算符",
                            "priority": 2,
                            "font-weight": "bold",
                            "note": "- 把两个记号合成一个记号\n#define XNAME(n) x##n;\n- x1"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "civbbga5eqo0",
                            "created": 1648451586342,
                            "text": "...和__VA_ARGS__",
                            "font-weight": "bold",
                            "priority": 2,
                            "note": "#define PR(...) printf(__VA_ARGS__)\n不定参数"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "civbedj61000",
                            "created": 1648451815449,
                            "text": "预定义宏",
                            "font-weight": "bold",
                            "priority": 2,
                            "note": "- __DATE__ 预处理的日期\n- __FILE__ 当前源码文件\n- __LINE__ 当前源码文件所在的行\n- __STDC__ 1 - C标准\n- __STDC_HOSTED__ 1: 本机环境; 0\n- __STDC_VERSION__ \n\t- 199901L C99\n    - 201112L C11\n- __TIME__ 翻译代码时间(hh:mm:ss)\n\n- 预定义标识符 __func__ 当前的函数名"
                        },
                        "children": []
                    }
                ]
            },
            {
                "data": {
                    "id": "ciq1qp9u5qg0",
                    "created": 1647916770494,
                    "text": "编译执行流程",
                    "priority": 1,
                    "note": "编写代码 => .c .h 源代码\n编译代码 => .obj/.o 文件(仅编写代码的机器码)\n链接代码 => .exe(还包含库函数和启动代码的机器码)\n",
                    "expandState": "collapse"
                },
                "children": [
                    {
                        "data": {
                            "id": "ciq1tett5ls0",
                            "created": 1647916982849,
                            "text": "编译",
                            "priority": 2,
                            "font-weight": "bold",
                            "note": "**编译命令**\ngcc xxx.c -o test.o\ngcc xxx.c -o test.obj\n\n**编译器解释**\ntypedef xx xxx"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "ciq1th5ri8o0",
                            "created": 1647916987926,
                            "text": "链接",
                            "priority": 2,
                            "font-weight": "bold",
                            "note": "**链接命令**\ngcc xxx.o -o test.exe",
                            "expandState": "collapse"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cissbe2o2j40",
                                    "created": 1648194860534,
                                    "text": "外部链接",
                                    "font-weight": "bold",
                                    "priority": 3,
                                    "note": "- 具有文件作用域的变量，并且没有static修饰\n- 可以在多文件程序中使用"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cissbj7rshs0",
                                    "created": 1648194871727,
                                    "text": "内部链接",
                                    "font-weight": "bold",
                                    "priority": 3,
                                    "note": "- 其中一种具有文件作用域，且static修饰的变量\n- 只能在同一个翻译单元中使用"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cissbmf21u80",
                                    "created": 1648194878697,
                                    "text": "无链接",
                                    "font-weight": "bold",
                                    "priority": 3,
                                    "note": "- 具有块作用域、函数作用域或函数原型作用域的变量\n- 当为自动存储期时，可以使用auto显式声明该变量要覆盖掉外部变量定义"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cis6nm08tq00",
                            "created": 1648133753754,
                            "text": "执行",
                            "priority": 2,
                            "font-weight": "bold",
                            "expandState": "collapse"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cis6o2521sw0",
                                    "created": 1648133788873,
                                    "text": "命令行参数",
                                    "font-weight": "bold",
                                    "priority": 3,
                                    "note": "int main(int argc, char *argv[])\n### param\n\t- int argc 参数个数\n    - char *[] \n    \t- 第一个 程序名\n        - 第二个 第一个参数\n        - ..."
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cissh90tee80",
                                    "created": 1648195319723,
                                    "text": "存储期",
                                    "font-weight": "bold",
                                    "priority": 3,
                                    "layout_right_offset": {
                                        "x": 4,
                                        "y": -15
                                    },
                                    "expandState": "expand"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cisshgkmbps0",
                                            "created": 1648195336158,
                                            "text": "静态存储期",
                                            "font-weight": "bold",
                                            "priority": 4,
                                            "note": "- 程序执行期间\n- eg: \n\t- 含文件作用域的变量\n    - static 修饰的变量\n- 会默认初始化0\n- 只能初始化一次，必须在该变量定义时"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cisshpkjvhc0",
                                            "created": 1648195355745,
                                            "text": "线程存储期",
                                            "font-weight": "bold",
                                            "priority": 4,
                                            "note": "- 从被声明时到线程结束一直存在\n- eg: 以关键字_Thread_local声明一个对象时，每个线程都获得该变量的私有备份"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cisshvt1mj40",
                                            "created": 1648195369319,
                                            "text": "自动存储期",
                                            "font-weight": "bold",
                                            "priority": 4,
                                            "note": "- 块作用域的变量\n- 不会初始化"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cissi2gnsjk0",
                                            "created": 1648195383808,
                                            "text": "动态分配存储期",
                                            "font-weight": "bold",
                                            "priority": 4
                                        },
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ciq1w351liw0",
                            "created": 1647917192500,
                            "text": "gcc 设置",
                            "priority": 2,
                            "font-weight": "bold",
                            "note": "**设置GCC版本**\ngcc -std=c99 xxx.c\ngcc -std=c11 xxx.c\n",
                            "expandState": "expand"
                        },
                        "children": []
                    }
                ]
            },
            {
                "data": {
                    "id": "cis03i12be00",
                    "created": 1648115251153,
                    "text": "数组",
                    "priority": 1,
                    "font-weight": "bold",
                    "note": "### 原则\n1. C不会检查边界\n\n### 复合字面量\n1. (int [2]){1, 2}",
                    "expandState": "collapse"
                },
                "children": [
                    {
                        "data": {
                            "id": "cis042lognk0",
                            "created": 1648115295936,
                            "text": "定义和初始化",
                            "priority": 2,
                            "font-weight": "bold",
                            "note": "### 一般\n- 没有进行初始化\nint a[10];\n### malloc\n- 没有进行初始化\nint *a = (int *) malloc(6 * sizeof(int)); \n### calloc\n- 进行初始化为0\nint *a = (int *) calloc(6,  sizeof(int));\n### {}初始化\n- 不赋值，默认为0\nint a[4] = {1, 2, 3};\nint a[4] = {[2] = 1, 4};"
                        },
                        "children": []
                    }
                ]
            },
            {
                "data": {
                    "id": "ciq23avemko0",
                    "created": 1647917757880,
                    "text": "关键字",
                    "priority": 1,
                    "expandState": "expand"
                },
                "children": [
                    {
                        "data": {
                            "id": "ciq23jo17740",
                            "created": 1647917777026,
                            "text": "类型",
                            "priority": 2,
                            "font-weight": "bold",
                            "expandState": "collapse"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ciq250zt0880",
                                    "created": 1647917893107,
                                    "text": "short/int/long/signed/unsigned",
                                    "note": "**signed 是C90添加的**\n\n### 1. 进制                  \n\n  1. 八进制\n      - %o / %#o\n      - 017\n  2. 十六进制\n      - %x / %#x\n      - 0x1a\n\n### 2. 整数\n\n  1. short/short int\n  \t  - 17\n  \t  - %h \n  2. long/long int\n      - 至少32位\n      - 17L\n      - %l\n  3. long long/long long int\n      - 至少64位\n      - 17LL\n      - %ll\n  4. unsigned/unsigned int\n      - 17u\n      - %u\n  5. int\n      - 可能16位\n      - 17\n      - %d %i",
                                    "priority": 3,
                                    "expandState": "expand"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "ciq5wmijdoo0",
                                            "created": 1647928519114,
                                            "text": "大小",
                                            "priority": 4,
                                            "note": "为了确保不同系统大小一致\n- stdint.h\n- inttypes.h\n- eg: \n\t- 大小int32_t int16_t\n\t- 最小宽度：int_least8_t\n    - 最快最小: int_fast8_t\n    - 最大有符号整数: intmax_t\n    - 最大无符号整数: unitmax_t\n- limits.h\n - 所有类型最大值和最小值\n - INT_MAX INT_MIN"
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "ciq256axvfc0",
                                    "created": 1647917904664,
                                    "text": "float/double/",
                                    "note": "### 0.前提\n\t- float.h\n### 1.float\n\t- %f %e %a(16)\n\t- 2.75f 3.11e3 .4 100.\n### 2.double\n\t- %f %e %a(16)\n\t- 2.75 2.75d\n### 3.long double\n\t- %lf %le %la(16)\n\t- 2.75",
                                    "priority": 3
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq25kxcysg0",
                                    "created": 1647917936495,
                                    "text": "char",
                                    "priority": 3,
                                    "note": "- 'a' 97\n- 'A' 65\n- '0' 48\n- %c",
                                    "expandState": "collapse"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "ciq3gxo6m940",
                                            "created": 1647921647354,
                                            "text": "特殊字符",
                                            "priority": 4,
                                            "font-weight": "bold",
                                            "note": "- '\\0' 空字符\n- '\\n' 换行符\n- '\\r' 回车符"
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "ciq2ody94nc0",
                                    "created": 1647919410230,
                                    "text": "_Bool",
                                    "note": "**C11 添加的**\n\n- true 1\n- false 0\n- stdbool.h",
                                    "priority": 3
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq2pyprj600",
                                    "created": 1647919533794,
                                    "text": "_Complex/_Imaginary",
                                    "note": "**C11 添加的**\n\n- _Complex 复数\n- _Imaginary 实数",
                                    "priority": 3,
                                    "expandState": "collapse"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "ciq68qckols0",
                                            "created": 1647929467831,
                                            "text": "_Complex",
                                            "note": "### 1.三种类型\n\t- float _Complex\n\t- double _Complex\n    - long doule _Complex \n### 2.使用\n\t- complex.h\n\t- %g\n\t- crealf() 实数\n    - crimagf() 虚数",
                                            "priority": 4
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "ciq6hnscgqw0",
                                            "created": 1647930167531,
                                            "text": "_Imaginary",
                                            "priority": 4,
                                            "note": "### 1.三种类型\n\t- float _Imaginary\n\t- double _Imaginary\n    - long doule _Imaginary "
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "ciq290iw05k0",
                                    "created": 1647918205541,
                                    "text": "void",
                                    "priority": 3,
                                    "note": "1. **void 空类型**\n2. **void \\*空指针**\n\t1. 可以赋值给任何指针(为了跟C++适配要强制转换)\n    2. 任何指针类型可以赋值给空指针\n3. 指针 %p"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ciq23lipq480",
                            "created": 1647917781058,
                            "text": "控制",
                            "priority": 2,
                            "font-weight": "bold",
                            "expandState": "collapse"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ciq26m0glko0",
                                    "created": 1647918017223,
                                    "text": "break/return/continue"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq29lo3cm00",
                                    "created": 1647918251568,
                                    "text": "switch/case/default"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq29rbrqv40",
                                    "created": 1647918263883,
                                    "text": "for/while/do"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq2bmm6o940",
                                    "created": 1647918410358,
                                    "text": "goto/if/else"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ciq248lxt6w0",
                            "created": 1647917831319,
                            "text": "新增",
                            "priority": 2,
                            "font-weight": "bold",
                            "note": "C11 新增的关键字",
                            "expandState": "collapse"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ciq2ee2tbvk0",
                                    "created": 1647918626864,
                                    "text": "_Alignas"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq2fhjki5c0",
                                    "created": 1647918712772,
                                    "text": "_Alignof"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq2jl60yn40",
                                    "created": 1647919034117,
                                    "text": "_Static_assert"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq2jrb7kmw0",
                                    "created": 1647919047491,
                                    "text": "_Thread_local"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ciq2a2sdp5k0",
                            "created": 1647918288832,
                            "text": "特殊",
                            "priority": 2,
                            "font-weight": "bold",
                            "expandState": "expand",
                            "note": "__Generic(x, int : 0, \\\n\tfloat: 1,\\\n    double: 2,\\\n    default: 3)"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ciq2ct6x2yo0",
                                    "created": 1647918503036,
                                    "text": "sizeof",
                                    "note": "1. 对于变量/类型名\n\t- sizeof(xx)\n2. 对于变量\n\t- sizeof xx\n3. 返回值看作常量且为size_t",
                                    "priority": 3,
                                    "font-weight": "bold"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq2cz1m5800",
                                    "created": 1647918515776,
                                    "text": "const",
                                    "note": "**限定只读**\n- 修饰变量依然不是静态区的常量,\n  只是不能修改了。\n",
                                    "priority": 3,
                                    "font-weight": "bold"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq2as0u6hs0",
                                    "created": 1647918343763,
                                    "text": "auto/register/restrict",
                                    "note": "- auto 显式强调覆盖掉外部定义的同名 变量\n- register 声明寄存器变量，无法获取寄存器变量地址，存储在CPU的寄存器中\n\t- 比普通的访问和处理的速度快\n    - 块作用域，无链接和自动存储期\n    - 存不了double那么大的空间\n- restrict 只能用于指针，表明该指针是访问数据对象的唯一且初始的方式，允许编译器优化某部分代码",
                                    "priority": 3,
                                    "font-weight": "bold"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq2cqijmj40",
                                    "created": 1647918497209,
                                    "text": "extern",
                                    "priority": 3,
                                    "font-weight": "bold",
                                    "note": "- 声明在引用其他文件的外部链接的变量，函数等"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq2cw4l5e00",
                                    "created": 1647918509425,
                                    "text": "static",
                                    "note": "**static 是C90添加的**\n- 修饰文件变量表示内部链接\n- 修饰自动周期的变量-提供静态存储期\n- 默认初始化为0\n\n- 修饰函数为静态函数(内联函数)\n\t- 只能用于其定义所在的文件(防止同名冲突)\n",
                                    "priority": 3,
                                    "font-weight": "bold"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq2jyqksgg0",
                                    "created": 1647919063658,
                                    "text": "volatile",
                                    "font-weight": "bold",
                                    "priority": 3,
                                    "note": "- 电脑，代理(非变量所在程序)可以改变该变量的值[为了防止编译器优化代码]\n- eg: 当前的时钟时间"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq2i1r4hww0",
                                    "created": 1647918913493,
                                    "text": "_Atomic",
                                    "note": "stdatomic.h threads.h\n\\_Atomic 声明变量，表明这个变量是原子的",
                                    "priority": 3,
                                    "font-weight": "bold"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq2d25tk540",
                                    "created": 1647918522561,
                                    "text": "struct/union/enum",
                                    "note": "**enum 是C90添加的**\n## struct\n#### 匿名结构\n    struct name{\n    \tstruct{\n           char first[20];\n           char last[20];\n        }\n    };\n    - 可以直接访问 name.first\n## union\n\t- 最大的那个字节作为实际字节大小\n    - 只能存一个\n    union name{\n    \tchar first[20];\n        char last[21];\n    };\n## enum\n\t- 0 1 2 ...\n    enum rgb{\n    \tred, green, blue\n    };\n    ",
                                    "priority": 3,
                                    "font-weight": "bold"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq2ivib7w80",
                                    "created": 1647918978263,
                                    "text": "_Generic",
                                    "font-weight": "bold",
                                    "priority": 3
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq2d4xa9ow0",
                                    "created": 1647918528575,
                                    "text": "inline",
                                    "priority": 3,
                                    "font-weight": "bold",
                                    "note": "- 内联函数\ninline static void eate(){\n\n}"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq2d89yzco0",
                                    "created": 1647918535872,
                                    "text": "typedef",
                                    "priority": 2
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "ciq2jggg8jc0",
                                    "created": 1647919023863,
                                    "text": "_Noreturn",
                                    "priority": 3,
                                    "note": "- 函数说明符，说明调用完成后函数不返回主调函数"
                                },
                                "children": []
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "id": "cir58bvm6wg0",
                    "created": 1648028175177,
                    "text": "运算符",
                    "priority": 1,
                    "expandState": "collapse"
                },
                "children": [
                    {
                        "data": {
                            "id": "cir58jk52600",
                            "created": 1648028191897,
                            "text": "算术运算符",
                            "priority": 2,
                            "font-weight": "bold",
                            "note": "### - + ++ -- sizeof (**r->l**)\n### * / % (l->r)\n### + - (l->r)"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cir59ccspbk0",
                            "created": 1648028254580,
                            "text": "关系运算符",
                            "priority": 2,
                            "font-weight": "bold",
                            "note": "### > < <= >= (l->r) \n### == != (l->r)"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cirzhx8g22w0",
                            "created": 1648113560240,
                            "text": "逻辑运算符",
                            "priority": 2,
                            "note": "### &&\n### ||\n### ！优先级只比()低\n### io646.h\n使用and or not"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cirzlemey5s0",
                            "created": 1648113833182,
                            "text": "条件运算符",
                            "priority": 2,
                            "note": "### ?: (r->l)"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cir5dnoc52o0",
                            "created": 1648028592679,
                            "text": "赋值运算符",
                            "priority": 2,
                            "font-weight": "bold",
                            "note": "### = [+-\\*/%]= (r->l)"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cirvdkagqiw0",
                            "created": 1648101934168,
                            "text": "逗号运算符",
                            "priority": 2,
                            "note": "   int i = 10,100;\n=> int i = 10; 100;\n"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cis021hcm9c0",
                            "created": 1648115136769,
                            "text": "&*",
                            "priority": 1,
                            "font-weight": "bold",
                            "note": "### &取地址运算符\n### \\*地址运算符 解引用"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "civ6a2g5u940",
                            "created": 1648437372316,
                            "text": "位操作",
                            "priority": 1,
                            "font-weight": "bold",
                            "note": "- ~ 按位取反\n- & 按位与\n- | 按位或\n- ^ 按位异或\n- << 左移\n- >> 右移",
                            "expandState": "collapse"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "civ6qm7ph080",
                                    "created": 1648438669168,
                                    "text": "位字段",
                                    "font-weight": "bold",
                                    "priority": 2,
                                    "note": "struct {\n\tunsigned int a : 1;\n\tunsigned int b : 1;\n\tunsigned int c : 1;\n\tunsigned int d : 1;\n}prnt;\n- 要保证对齐，不然会有匿名的空间"
                                },
                                "children": []
                            }
                        ]
                    }
                ]
            },
            {
                "data": {
                    "id": "ciq6lmqc2e80",
                    "created": 1647930478690,
                    "text": "库函数",
                    "priority": 1,
                    "expandState": "expand",
                    "note": null
                },
                "children": [
                    {
                        "data": {
                            "id": "ciq6mxba2ao0",
                            "created": 1647930580088,
                            "text": "string.h",
                            "font-weight": "bold",
                            "priority": 1,
                            "note": "- 以'\\0'结尾的char型数组\n- 字符串常量: \"abc\", 可以\\*取地址, 特别的: 相同字符串常量是都一个常量，相同地址(静态存储区)\n- char a[] = \"abc\"; 会赋值到非静态存储区\n",
                            "expandState": "collapse"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "ciq6n8d9yow0",
                                    "created": 1647930604153,
                                    "text": "strlen()",
                                    "priority": 2,
                                    "note": "### params\n    1. char *\n### return\n    1. unsigned int/size_t\n    2. 到'\\0'之前的长度",
                                    "font-weight": "bold"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cis66dvf0hs0",
                                    "created": 1648132403857,
                                    "text": "strcat()",
                                    "font-weight": "bold",
                                    "priority": 2,
                                    "note": "### param\n\t- char * 目标字符串\n    - char * 源字符串\n### return\n\t- char * 目标字符串的地址\n### result\n\t- 目标字符串后接源字符串，\n    然后返回目标字符串地址\n    - 第一个字符串变了\n    - 第二个字符串不变\n    "
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cis6a0zjqhk0",
                                            "created": 1648132689265,
                                            "text": "strncat()",
                                            "font-weight": "bold",
                                            "priority": 3,
                                            "note": "### param\n\t- char * 目标字符串\n    - char * 源字符串\n    - size_t 最大长度\n### return\n\t- char * 第一个字符串地址\n### result\n\t- 直到max - 1个字符停止，末尾不上'\\0'\n    - 补充最大长度，是为了防止目标字符串长度不够"
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "cis6bzg5i6w0",
                                    "created": 1648132842644,
                                    "text": "strcmp",
                                    "font-weight": "bold",
                                    "priority": 2,
                                    "note": "### param\n\t- char * 第一个字符串\n    - char * 第二个字符串\n### return\n\t- int \n    当1 == 2时，为0\n    当1 > 2时，为正数\n    当1 < 2时，为负数"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cis6dqxmbsg0",
                                            "created": 1648132980837,
                                            "text": "strncmp()",
                                            "font-weight": "bold",
                                            "priority": 3,
                                            "note": "### param\n\t- char * 第一个字符串\n    - char * 第二个字符串\n    - size_t 比较最大长度\n### return\n\t- int \n    当1 == 2时，为0\n    当1 > 2时，为正数\n    当1 < 2时，为负数\n### result\n\t只比较前面n个字符"
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "cis6enlx3rk0",
                                    "created": 1648133051964,
                                    "text": "strcpy",
                                    "font-weight": "bold",
                                    "priority": 2,
                                    "note": "### param\n\t- char * 目标字符串\n    - char * 源字符串\n### return \n\t- char * 目标字符串\n### result\n\t- 把源字符串复制到目标字符串，没有检查是否能存的下"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cis6hx6pl3c0",
                                            "created": 1648133307904,
                                            "text": "strncpy()",
                                            "font-weight": "bold",
                                            "priority": 3,
                                            "note": "### param\n\t- char * 目标字符串\n    - char * 源字符串\n    - size_t 可拷贝的最大长度\n### return \n\t- char * 目标字符串\n### result\n\t- 把源字符串复制到目标字符串\n    - 当目标长度不够时，可能会没有复制到'\\0'"
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "civbyqngeg80",
                                    "created": 1648453411290,
                                    "text": "memcpy()/memmove()",
                                    "font-weight": "bold",
                                    "priority": 2,
                                    "note": "## 2. memcpy\n#### param\n\t- void * restrict s1\n    - const void * restrict s2\n    - size_t n\n#### return\n\t- void *\n#### result\n\t- 假设没有空间重叠，进行赋值\n## 2. memmove\n#### param\n\t- void * s1\n    - const void * s2\n    - size_t n\n#### return\n\t- void *\n#### result\n\t- 先赋值给临时缓冲区，在拷贝到最终目的地"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "ciq6obztk540",
                            "created": 1647930690411,
                            "text": "stdio.h",
                            "font-weight": "bold",
                            "priority": 1,
                            "expandState": "collapse"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cis0rijvxzk0",
                                    "created": 1648117133032,
                                    "text": "输入输出字符串",
                                    "font-weight": "bold",
                                    "priority": 1,
                                    "expandState": "collapse"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cis0rayvn7s0",
                                            "created": 1648117116524,
                                            "text": "fputs()",
                                            "font-weight": "bold",
                                            "priority": 2,
                                            "note": "### param\n\t- char * 输出的字符串指针\n    - FILE * 输出的文件(stdout)\n### return\n\t- 若成功，返回char *\n    - 若失败，返回NULL\n### result\n\t- 打印字符，直到'\\0'，\n      不额外添加换行符"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cis0qzh23yg0",
                                            "created": 1648117091502,
                                            "text": "fgets()",
                                            "priority": 2,
                                            "font-weight": "bold",
                                            "note": "### param\n\t- char * 字符指针(存字符串)\n    - size_t 最大长度(带上'\\0')\n    - FILE *stream 输入文件(stdin)\n### return \n\t- 成功输入字符:\n    char * 输入的字符串(和参数同)\n    - 没有输入字符或失败:\n    NULL\n### result\n\t- 当换行时停止，记录换行符",
                                            "expandState": "collapse"
                                        },
                                        "children": [
                                            {
                                                "data": {
                                                    "id": "cis614rxy2g0",
                                                    "created": 1648131992235,
                                                    "text": "fgets_s()",
                                                    "priority": 3,
                                                    "note": "### C11添加(可选)\n### param\n\t- char * 字符指针(存字符串)\n    - size_t 最大长度(带上'\\0')\n### return \n\t- 成功输入字符:\n    char * 输入的字符串(和参数同)\n    - 没有输入字符或失败:\n    NULL\n### result\n\t- 当换行时停止，记录换行符\n    - 当超过最大字符数，还没有换行时: 丢弃剩下的, 直到读到换行位置，然后返回NULL"
                                                },
                                                "children": []
                                            }
                                        ]
                                    },
                                    {
                                        "data": {
                                            "id": "cis0oin1d7c0",
                                            "created": 1648116898130,
                                            "text": "gets()",
                                            "priority": 2,
                                            "font-weight": "bold",
                                            "note": "### return\n\t- char *\n### result\n\t- 读取整行输入，直到遇到换行符(舍弃)，并补充一个'\\0'\n### 问题\n\t- 如果字符串过长会导致缓冲区溢出\n    - "
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cis0hq45v200",
                                            "created": 1648116365853,
                                            "text": "puts()",
                                            "priority": 2,
                                            "font-weight": "bold",
                                            "note": "### param\n\t- char *: 字符串\n### result\n\t- 自动在显示的字符串末尾加上换行符"
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "cis0s4tq9k00",
                                    "created": 1648117181516,
                                    "text": "输入输出字符",
                                    "font-weight": "bold",
                                    "priority": 1,
                                    "expandState": "collapse"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cirvlrvsvhk0",
                                            "created": 1648102577609,
                                            "text": "getchar()/putchar()",
                                            "priority": 2,
                                            "font-weight": "bold",
                                            "note": "## getchar()\n#### param\n\t- char\n## putchar()\n#### return\n\t- 键盘输入的字符(any)\n"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cirvk3qta540",
                                            "created": 1648102446700,
                                            "text": "getc()/putc()",
                                            "priority": 2,
                                            "font-weight": "bold",
                                            "note": "## getc\n#### param\n\t- FILE *\n#### return\n\t- char \n    - 文件结尾 - EOF\n## putc\n#### param\n\t- char 要读入的字符\n\t- FILE * 指向读入文件的指针"
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "cis0sf5vvc80",
                                    "created": 1648117204020,
                                    "text": "通用输入输出",
                                    "font-weight": "bold",
                                    "priority": 1,
                                    "expandState": "collapse"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "ciq6oy4s1uo0",
                                            "created": 1647930738600,
                                            "text": "printf()/scanf()",
                                            "font-weight": "bold",
                                            "priority": 2,
                                            "note": "## 1. printf\n### params\n    1. char *\n    2. ...(从右往左执行，压栈)\n### return\n    1. 打印字符个数\n    2. 错误: 负数\n### char \\* 参数标记\n\t1. %s 字符串\n    2. %% 打印一个%\n    3. .数字 表示小数精度\n    4. %td ptrdiff_t 指针之间的差值\n    5. %zd size_t sizeof返回类型\n### char \\* 格式标记\n\t1. %-20s 左对齐\n    2. %+6.2f 加号\n    3. % d(前导空格/0) 若为负数，\n    空格变符号\n    4. %#o 加进制的0 0x\n## 2. scanf\n### params\n    1. char *\n    2. void* ...(从右往左)\n### return\n    1. 输入个数\n    2. 错误: 负数\n### 格式说明符\n\t1. * %*d 抑制赋值\n    2. 数字 %10d 最长宽度，\n    或遇到空白符时停止\n### 输入格式说明符\n\t1. %s 从第一个非空白开始，\n    到下一个空白结束\n    2. ' %c' 从第一个非空白处\n    读取字符\n    3. '%c' 读取第一个字符\n### 注意事项\n\t1. 在第一个出错处停止读取输入\n"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "cis6l2jqlq00",
                                            "created": 1648133554669,
                                            "text": "sprinf()",
                                            "font-weight": "bold",
                                            "priority": 2,
                                            "note": "### params\n\t1. char * 字符数组\n    2. char * 格式字符串\n    3. ...(从右往左执行，压栈)\n### return\n    1. 打印字符个数\n    2. 错误: 负数\n### char \\* 参数标记\n\t1. %s 字符串\n    2. %% 打印一个%\n    3. .数字 表示小数精度\n    4. %td ptrdiff_t 指针之间的差值\n    5. %zd size_t sizeof返回类型\n### char \\* 格式标记\n\t1. %-20s 左对齐\n    2. %+6.2f 加号\n    3. % d(前导空格/0) 若为负数，\n    空格变符号\n    4. %#o 加进制的0 0x"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "civ539g92jc0",
                                            "created": 1648434017900,
                                            "text": "fprintf()/fscanf()",
                                            "priority": 2,
                                            "font-weight": "bold",
                                            "note": "## 1. fprintf\n#### param\n\t- FILE * 输出文件\n    - char * 字符串\n    - char * 格式\n#### 其他类似printf\n## 2. fscanf\n#### param\n\t- FILE * 输入文件\n    - char * 输入格式\n    - xxx 存放输入数据变量地址\n#### 其他类似scanf"
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "cisv8twz1b40",
                                    "created": 1648203123255,
                                    "text": "文件操作函数",
                                    "priority": 1,
                                    "font-weight": "bold",
                                    "expandState": "collapse",
                                    "note": "- stdin 标准输入\n- stdout 标准输出\n- stderr 标准错误"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "cisv95cxbso0",
                                            "created": 1648203148165,
                                            "text": "fopen()",
                                            "font-weight": "bold",
                                            "priority": 2,
                                            "note": "#### param\n\t- char * 路径和文件名\n    - char * mode\n    \t- r/r+\n        - w/w+\n        - a/a+\n        - rb/ab/wb\n        - x(c 11)\n        1. 打开失败，原文件不会删除\n        2. 环境允许下，x可以独占当前打开的文件，其他线程无法访问.\n        3. wx 模式打开一个存在文件会失败\n#### return \n\t- FILE * 文件指针\n#### result\n\t- 获得指向包含文件信息的数据对象"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "civ4zijtdb40",
                                            "created": 1648433724250,
                                            "text": "fclose()",
                                            "font-weight": "bold",
                                            "priority": 2,
                                            "note": "#### param\n\t- FILE *\n#### return\n\t- 成功 0\n    - 失败 EOF"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "civ572mnyjc0",
                                            "created": 1648434316507,
                                            "text": "fseek()",
                                            "font-weight": "bold",
                                            "priority": 2,
                                            "note": "#### param\n\t- FILE *\n    - long 偏移量\n    \t- 正 前移\n        - 负 后移\n        - 0 不动\n    - 起始点(文件模式才保证可移植性)\n    \t- SEEK_SET 文件开始处\n        - SEEK_CUR 当前位置\n        - SEEK_END 文件末尾\n#### return\n\t- int \n    \t- 0 成功\n        - -1 错误，eg: 超出范围\n#### result\n\t- 移动指针wei'zhi"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "civ5c61te8o0",
                                            "created": 1648434715775,
                                            "text": "ftell()",
                                            "font-weight": "bold",
                                            "priority": 2,
                                            "note": "#### param\n\t- FILE *\n#### return \n\t- long 距文件开始处的字节数"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "civ5hozuclc0",
                                            "created": 1648435148835,
                                            "text": "fgetpos()/fsetpos()",
                                            "font-weight": "bold",
                                            "priority": 2,
                                            "note": "## 处理大文件的\n## fgetpos\n#### param\n\t- FILE *\n    - fpos_t *\n#### return \n\t- 0 成功\n    - !0 失败\n## fsetpos\n#### param\n\t- FILE *\n    - fpos_t *\n#### return\n\t- 0 成功\n    - !0 失败\n#### result\n\t- 设置文件指针指向fpos_t指定的位置"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "civ5lmgpqew0",
                                            "created": 1648435456781,
                                            "text": "ungetc()",
                                            "font-weight": "bold",
                                            "priority": 2,
                                            "note": "#### param\n\t- int c\n    - FILE* fp\n#### return\n\t- int\n#### result\n\t- 把c指定的字符放回输入流中"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "civ5mpyggtc0",
                                            "created": 1648435542749,
                                            "text": "fflush()",
                                            "priority": 2,
                                            "font-weight": "bold",
                                            "note": "#### param\n\t- FILE *\n#### return\n\t- int\n#### result\n\t- 刷新缓冲区"
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "civ5ns0dvlk0",
                                            "created": 1648435625583,
                                            "text": "setvbuf()",
                                            "font-weight": "bold",
                                            "priority": 2,
                                            "note": "#### param\n\t- FILE *\n    - char * buf\n    \t- 待使用的存储区\n    - int mode\n    \t- _IOFBF 完全缓冲\n        - _IOLBF 行缓冲\n        - _IONBF\n    - size_t size\n    \t- 缓冲区的大小\n#### return\n\t- 0 成功\n    - !0 失败\n#### result\n\t- 打开文件，未进行其他操作前，可以使用来设置缓冲区大小\n    "
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "civ60kht67s0",
                                            "created": 1648436627957,
                                            "text": "feof()/ferror()",
                                            "font-weight": "bold",
                                            "priority": 2,
                                            "note": "## feof\n#### param\n\t- FILE *\n#### return \n\t- 非0 到末尾\n    - 0 没到末尾\n## ferror\n#### param\n\t- FILE *\n#### return\n\t- 非0 出现读写错误\n    - 0 没有错误"
                                        },
                                        "children": []
                                    }
                                ]
                            },
                            {
                                "data": {
                                    "id": "civ5xn0v9ig0",
                                    "created": 1648436398370,
                                    "text": "二进制输入输出",
                                    "font-weight": "bold",
                                    "priority": 1,
                                    "expandState": "collapse"
                                },
                                "children": [
                                    {
                                        "data": {
                                            "id": "civ5xts7uds0",
                                            "created": 1648436413084,
                                            "text": "fread()",
                                            "font-weight": "bold",
                                            "note": "#### param\n\t- const void * restrict 指向待写入内容\n    - size_t 大小\n    - size_t 数量\n    - FILE * fp\n#### return\n\t- 成功 数量\n    - 失败 比数量少",
                                            "priority": 2
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "civ5xw9ajl40",
                                            "created": 1648436418470,
                                            "text": "fwrite()",
                                            "font-weight": "bold",
                                            "note": "#### param\n\t- const void * restrict 待填入地址\n    - size_t 大小\n    - size_t 数量\n    - FILE * fp\n#### return\n\t- 成功 数量\n    - 失败 比数量少",
                                            "priority": 2
                                        },
                                        "children": []
                                    },
                                    {
                                        "data": {
                                            "id": "civ67k8dtf40",
                                            "created": 1648437175936,
                                            "text": "rewrite()",
                                            "note": "确保文件指针在开始处",
                                            "priority": 3,
                                            "font-weight": "bold"
                                        },
                                        "children": []
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cirvmkmxib40",
                            "created": 1648102640199,
                            "text": "ctype.h",
                            "priority": 1,
                            "font-weight": "bold",
                            "expandState": "collapse"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cirvn4iywmw0",
                                    "created": 1648102683495,
                                    "text": "islower()/isupper()",
                                    "priority": 2,
                                    "font-weight": "bold",
                                    "note": "## islower/isupper\n\t是否小/大写字符\n    param\n\t- char\n    return\n    - _Bool\n\t\n    "
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cirvq36zjtk0",
                                    "created": 1648102915686,
                                    "text": "tolower()/toupper()",
                                    "font-weight": "bold",
                                    "priority": 2,
                                    "note": "## 变小/大写字符"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cisr395akh40",
                            "created": 1648191401786,
                            "text": "stdlib.h",
                            "priority": 1,
                            "font-weight": "bold",
                            "expandState": "collapse"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cisr3kftgrs0",
                                    "created": 1648191426367,
                                    "text": "strtol()/strtod()",
                                    "note": "### param\n\t- char * 要转的字符串\n    - char ** 空子符的地址的地址\n    - size_t 进制\n### return\n\t- long / double\n### result\n\t- 会检测输入为非数字的情况",
                                    "priority": 2
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cisrb02shd40",
                                    "created": 1648192008957,
                                    "text": "atoi()/atol()/atof()",
                                    "priority": 2,
                                    "note": "### param\n\t- char * 要转数字的字符串\n### return\n\t- int/long/double\n### result\n\t- 对于非数字，返回0"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cist6p68blc0",
                                    "created": 1648197313983,
                                    "text": "rand()/srand()",
                                    "priority": 2,
                                    "note": "## srand()\n### result\n\t- 重置随机种子"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cisuv50e1j40",
                                    "created": 1648202050308,
                                    "text": "free()/malloc()/calloc()",
                                    "priority": 2,
                                    "font-weight": "bold"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "civbtktqsiw0",
                                    "created": 1648453006788,
                                    "text": "exit()/atexit(function *)",
                                    "font-weight": "bold",
                                    "priority": 2,
                                    "note": "- exit 停止程序\n- atexit(function * ) 在停止之前，调用的会调用的函数，新入后执行\n\t- function * 必须void xx(void)"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "civbvi11k940",
                                    "created": 1648453157428,
                                    "text": "qsort()",
                                    "font-weight": "bold",
                                    "priority": 1,
                                    "note": "#### param\n\t- void * base 待排序数据首指针\n    - size_t 待排序项的数量\n    - size_t 每个元素的大小\n    - int (*compar)(const void *, const void *),比较函数指针\n    \t- > 正数\n        - < 负数\n        - 0 相等\n#### return \n\t- void\n#### result\n\t- 原地排序nlog(n)\n    "
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "civbsfktwy80",
                            "created": 1648452917001,
                            "text": "math.h",
                            "priority": 1,
                            "font-weight": "bold"
                        },
                        "children": []
                    },
                    {
                        "data": {
                            "id": "cist4yep1ns0",
                            "created": 1648197177358,
                            "text": "time.h",
                            "priority": 2,
                            "font-weight": "bold",
                            "expandState": "collapse"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cist55xb7ao0",
                                    "created": 1648197193721,
                                    "text": "time()",
                                    "font-weight": "bold",
                                    "note": "### return\n\t- time_t\n### result\n\t- 返回系统时间",
                                    "priority": 3
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "cirzr2j9os80",
                            "created": 1648114277056,
                            "text": "conio.h",
                            "priority": 4,
                            "expandState": "collapse"
                        },
                        "children": [
                            {
                                "data": {
                                    "id": "cirzrbyzry80",
                                    "created": 1648114297598,
                                    "text": "getche()",
                                    "font-weight": "bold",
                                    "note": "### 回显无缓冲的输入字符函数\n### return\n\t- char"
                                },
                                "children": []
                            },
                            {
                                "data": {
                                    "id": "cirzrkaa6e80",
                                    "created": 1648114315694,
                                    "text": "getch()",
                                    "font-weight": "bold",
                                    "note": "### 无回显无缓冲输入函数\n### return\n\t- char"
                                },
                                "children": []
                            }
                        ]
                    },
                    {
                        "data": {
                            "id": "civbyf6cx8w0",
                            "created": 1648453386311,
                            "text": "assert.h",
                            "font-weight": "bold",
                            "priority": 4
                        },
                        "children": []
                    }
                ]
            }
        ]
    },
    "template": "right",
    "theme": "fresh-blue",
    "version": "1.4.43"
}